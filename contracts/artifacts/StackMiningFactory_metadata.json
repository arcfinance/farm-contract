{
	"compiler": {
		"version": "0.8.10+commit.fc410830"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "AddPool",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "NewPool",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "RemovePool",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "contract IBEP20",
						"name": "_stakedToken",
						"type": "address"
					},
					{
						"internalType": "contract IBEP20",
						"name": "_rewardToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_rewardPerBlock",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_startBlock",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_bonusEndBlock",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_poolLimitPerUser",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_admin",
						"type": "address"
					}
				],
				"name": "newPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "pools",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "removePool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"newPool(address,address,uint256,uint256,uint256,uint256,address)": {
					"details": "Add new pool to factory",
					"params": {
						"_admin": ": admin address with ownership Emits an {NewPool} event indicating create new stacking pool",
						"_bonusEndBlock": ": end block",
						"_poolLimitPerUser": ": pool limit per user in stakedToken (if any, else 0)",
						"_rewardPerBlock": ": reward per block (in rewardToken)",
						"_rewardToken": ": reward token address",
						"_stakedToken": ": staked token address",
						"_startBlock": ": start block"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"removePool(address)": {
					"details": "Remove pool from factory Emits an {RemovePool} event indicating remove contract from address list"
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"stateVariables": {
				"pools": {
					"details": "All pools"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/StackMiningFactory.sol": "StackMiningFactory"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163",
				"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a",
			"license": "MIT",
			"urls": [
				"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd",
				"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a",
			"license": "MIT",
			"urls": [
				"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e",
				"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c",
				"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b",
			"license": "MIT",
			"urls": [
				"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6",
				"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N"
			]
		},
		"contracts/StackMining.sol": {
			"keccak256": "0xf873c3ee743a5dd32bac1b272cf8dd27730646567c663d9ca900b237daed333b",
			"license": "MIT",
			"urls": [
				"bzz-raw://728689ca43159c5aad18b06682e1f07bd34e2224af9b4d582c2fd296d0f24ce7",
				"dweb:/ipfs/QmPxkJYdWmNXsdFFvjpMSF7dSgx2gp3pGsBmjFJSNvzt2n"
			]
		},
		"contracts/StackMiningFactory.sol": {
			"keccak256": "0xb0ba1961136db53ad2fa9eee54945833fef77e91ef84f2f58ac914ea7dacb268",
			"license": "MIT",
			"urls": [
				"bzz-raw://ceeee0fac1519fdbaecd303e41cc2dcf2c4bd75b5538d145580eb12eb74edada",
				"dweb:/ipfs/QmVmkmFiyAGYek4rVBqTBaiAbKksWAihue9T4iHJMwWjHD"
			]
		},
		"contracts/interfaces/IARCStackFactory.sol": {
			"keccak256": "0xa2b59d1cbbd3b6e659692c56f0d953f63568f6a06910ac381b1c3d7598cba9c9",
			"license": "MIT",
			"urls": [
				"bzz-raw://aca6f8d8e293d175beba66762accfd63cdad3df36ab897847baac2aab7c69850",
				"dweb:/ipfs/Qme918iziWgLsabwLEcfM1XXzBo7W3tYYq2zwnwZQXk7hJ"
			]
		},
		"contracts/interfaces/IARCStackMining.sol": {
			"keccak256": "0xda9c2606bd5328c0e56f8e054d4ac974a28d9f96a2f0c6fd5d6b2b6faf422963",
			"license": "MIT",
			"urls": [
				"bzz-raw://175d89186f07617f943a8102938c6dd14e29f616d8b6754bced9d74c899f6891",
				"dweb:/ipfs/QmaQTs7f74zaSm36Y8hF3k6F1si17HJkfWDwn7Uui8oQXc"
			]
		},
		"contracts/interfaces/IBEP20.sol": {
			"keccak256": "0x0269db267b136d229c8bf36cf9e4408376350f12d970ec9c2c73980227f28c40",
			"license": "MIT",
			"urls": [
				"bzz-raw://dccbbbeb171e82d8ad625a3cab6838e7d11ef6ce0c0bcbce0a86b8ebc01d2aec",
				"dweb:/ipfs/QmaTCHn9podTaRbciJ4fhmLFPV5wHiqm1wFNXAgxLyixai"
			]
		},
		"contracts/libraries/SafeBEP20.sol": {
			"keccak256": "0xccdbf1bf00bc184cb5d3c4d9b68924c9a9ff2ddd6b5c3abf966fbbda3be6c2e1",
			"license": "MIT",
			"urls": [
				"bzz-raw://5414eac81673a90f092439faba621b159bcb80aa47097dfa64fe62686138e97b",
				"dweb:/ipfs/QmYPbtTYk8FWc6cNY7EqqFNQxE8UiDqDu7n8Xm65wXcLGs"
			]
		}
	},
	"version": 1
}